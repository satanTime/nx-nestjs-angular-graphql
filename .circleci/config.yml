version: 2.1
orbs:
  win: circleci/windows@4.1.1
parameters:
  lockindex:
    type: string
    default: '1'
jobs:
  Install:
    docker:
      - image: satantime/puppeteer-node:16.15.0-buster
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "./node_modules/" ]; then
              npm ci --ignore-scripts && \
              npm run postinstall
            fi
      - save_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  CT Frontend:
    docker:
      - image: satantime/puppeteer-node:16.15.0-buster
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Lint
          command: npm run lint ct-frontend
      - run:
          name: Unit Tests
          command: >
            npm run test ct-frontend
            --
            --codeCoverage
            --reporters=dots,junit
      - run:
          name: Build
          command: >
            npm run build ct-frontend
            --
            --prod
      - store_test_results:
          path: test-reports/apps-ct-frontend
      - store_artifacts:
          path: test-reports/apps-ct-frontend
          destination: ct-frontend
  CT Frontend IE:
    executor:
      name: win/default
    steps:
      - checkout
      - restore_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if ((Test-Path "node_modules") -ne "True") {
              npm ci --ignore-scripts && \
              npm run postinstall
            }
      - save_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Unit Tests
          command: >
            npm run test ct-frontend
            --
            --browsers=IECi
            --reporters=dots,junit
      - store_test_results:
          path: test-reports/apps-ct-frontend
    environment:
      IE_BIN: 'C:\Program Files\Internet Explorer\iexplore.exe'
  CT Frontend E2E:
    docker:
      - image: satantime/puppeteer-node:16.15.0-buster
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Lint
          command: npm run lint ct-frontend-e2e
      - run:
          name: E2E Tests
          command: npm run e2e ct-frontend-e2e
      - store_test_results:
          path: test-reports/apps-ct-frontend-e2e
      - store_artifacts:
          path: test-reports/apps-ct-frontend-e2e
          destination: ct-frontend-e2e
  CT Backend:
    docker:
      - image: satantime/puppeteer-node:16.15.0-buster
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Lint
          command: npm run lint ct-backend
      - run:
          name: Unit Tests
          command: >
            JEST_JUNIT_OUTPUT_DIR=./test-reports/apps-ct-backend
            npm run test ct-backend
            --
            --codeCoverage
            --reporters=jest-junit
            --maxWorkers=1
      - run:
          name: Build
          command: >
            npm run build ct-backend
            --
            --prod
            --maxWorkers=1
      - store_test_results:
          path: test-reports/apps-ct-backend
      - store_artifacts:
          path: test-reports/apps-ct-backend
          destination: ct-backend
workflows:
  version: 2
  build:
    jobs:
      - Install
      - 'CT Frontend':
          requires:
            - Install
      - 'CT Frontend IE':
          requires:
            - Install
      - 'CT Frontend E2E':
          requires:
            - Install
      - 'CT Backend':
          requires:
            - Install
